{"version":3,"sources":["components/ToDoItem.jsx","components/ToDoForm.jsx","components/http.js","components/ToDo.jsx","index.jsx"],"names":["ToDoItem","props","item","onCheck","onRemove","useState","className","setClassName","checked","onChange","id","title","onClick","e","preventDefault","style","background","class","description","ToDoForm","onSubmit","Form","useForm","form","layout","onFinish","values","resetFields","Item","name","placeholder","htmlType","type","t","this","adapter","content","completed","http","url","token","body","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","responseText","delTask","res","alert","ToDo","todos","setTodos","checkCount","setCheckCount","useEffect","itemArray","temp","JSON","parse","arr","Array","length","i","getTasks","index","findIndex","todo","action","closeItem","splice","console","log","toUpperCase","resp","stringify","addTask","map","renderTodoItems","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"8RAMaA,EAAW,SAACC,GAAW,IAC1BC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SADU,EAECC,mBAAS,IAFV,mBAE1BC,EAF0B,KAEfC,EAFe,KAuBjC,OACE,qCAAE,qBAAID,UAAU,YAAd,UACA,cAAC,IAAD,CAAUA,UAAWA,EACnBE,QAASN,EAAKM,QACdC,SAhBc,WACdN,IACFA,EAAQD,EAAKQ,IAEXH,EADe,KAAdD,EACY,UAGA,MAOf,SAGEJ,EAAKS,QACP,cAAC,IAAD,CAAQC,QA1BS,SAACC,GACpBA,EAAEC,iBAEEV,GACFA,EAASF,EAAKQ,KAsBiBK,MAAO,CAAEC,WAAY,WAApD,SAAgE,cAAC,iBAAD,QALjCd,EAAKQ,IAMjC,mBAAGO,MAAM,OAAT,SAAiBf,EAAKgB,kB,oBCjClBC,EAAW,SAAClB,GAAW,IAC1BmB,EAAanB,EAAbmB,SADyB,EAElBC,IAAKC,UAAbC,EAF0B,oBAWjC,OACE,eAAC,IAAD,CAAMjB,UAAU,YAAYiB,KAAMA,EAAMC,OAAQ,SAAUC,SAT3C,SAACC,GACZN,GACFA,EAASM,GAEXH,EAAKI,eAKL,UACE,cAAC,IAAKC,KAAN,CAAWC,KAAK,QAAQvB,UAAU,kBAAlC,SACE,cAAC,IAAD,CAAOwB,YAAa,eAEtB,cAAC,IAAKF,KAAN,CAAWC,KAAK,cAAhB,SACE,cAAC,IAAD,CAAOC,YAAa,kBAEtB,cAAC,IAAKF,KAAN,CAAWtB,UAAU,oBAArB,SACE,cAAC,IAAD,CAAQyB,SAAS,SAASC,KAAK,UAA/B,uB,QCvBJC,EAAI,2CAEF/B,EAKL,WAAaQ,EAAIC,EAAOH,EAASU,GAAa,oBAC7CgB,KAAKxB,GAAKA,EACVwB,KAAKvB,MAAQA,EACbuB,KAAK1B,QAAUA,EACf0B,KAAKhB,YAAcA,GAGfiB,EAIN,WAAYjC,GAAM,oBACjBgC,KAAKE,QAAUlC,EAAKS,MACpBuB,KAAKG,UAAYnC,EAAKM,QACtB0B,KAAKhB,YAAchB,EAAKgB,aAIxB,SAASoB,EAAKC,EAAKC,EAAOC,EAAMT,GAEhC,IAAIU,EAAU,IAAIC,eAKlB,OAJAD,EAAQE,KAAKZ,EAAMO,GAAK,GACxBG,EAAQG,iBAAiB,gBAAiB,UAAYL,GACtDE,EAAQG,iBAAiB,eAAgB,oBACzCH,EAAQI,KAAKL,GACNC,EAAQK,aAkBT,SAASC,EAAQtC,GACvB,IAAIuC,EACJ,IACAX,EAAK,yCAA2C5B,EAAIuB,EAAG,KAAM,UAC7DgB,EAAM,KAEN,MAAMpC,GACLqC,MAAM,wBAA0BrC,GAChCoC,EAAM,MAEP,OAAOA,ECtDD,IAAME,EAAO,WAAO,IAAD,EAGE9C,mBAAS,IAHX,mBAGjB+C,EAHiB,KAGVC,EAHU,OAIYhD,mBAAS,GAJrB,mBAIjBiD,EAJiB,KAILC,EAJK,KAMxBC,qBAAU,WACR,IAAIC,EDsBD,WACP,IAGC,IAFA,IAAIC,EAAOC,KAAKC,MAAMtB,EAAK,wCAAyCL,EAAG,KAAM,QACzE4B,EAAM,IAAIC,MAAMJ,EAAKK,QACjBC,EAAI,EAAGA,EAAIN,EAAKK,OAAQC,IAC/BH,EAAIG,GAAK,IAAI9D,EAAKwD,EAAKM,GAAGtD,GAAIgD,EAAKM,GAAG5B,QAASsB,EAAKM,GAAG3B,UAAWqB,EAAKM,GAAG9C,aAG5E,MAAML,GACLqC,MAAM,wBAA0BrC,GAChCgD,EAAM,IAAIC,MAAM,GAEjB,OAAOD,EClCaI,GAChBZ,EAASI,KACR,IAEH,IAAMtD,EAAU,SAACO,GACf,IAAMwD,EAAQd,EAAMe,WAAU,SAAAC,GAAI,OAAIA,EAAK1D,KAAOA,KAElD,IAAe,IAAXwD,EAAc,CAChB,IAAME,EAAOhB,EAAMc,GACqC,KDuDvD,SAAmBxD,EAAI2D,GAC7B,IAAIpB,EACJ,IACCA,EAAMX,EAAK,yCAA2C5B,EAAK,IAAM2D,EAAQpC,EAAG,KAAM,QAEnF,MAAMpB,GACLqC,MAAMrC,GACNoC,EAAM,MAEP,OAAOA,EChECqB,CAAU5D,EAAI0D,EAAK5D,QAAU,SAAW,WACzC4D,EAAK5D,SAAW4D,EAAK5D,QACrB4C,EAAMmB,OAAOL,EAAO,EAAGE,GACvBf,EAAS,YAAID,IACbG,EAAca,EAAK5D,QAAS8C,EAAa,EAAIA,EAAa,MAwB1DlD,EAAW,SAACM,GAChB,IAAMwD,EAAQd,EAAMe,WAAU,SAAAC,GAAI,OAAIA,EAAK1D,KAAOA,MAEnC,IAAXwD,GAAgC,OAAhBlB,EAAQtC,KACvB0C,EAAMc,GAAO1D,SAAQ+C,EAAcD,EAAa,GACnDF,EAAMmB,OAAOL,EAAO,GACpBb,EAAS,YAAID,MA+CjB,OACE,eAAC,IAAD,CAAMzC,MAAO,WAAYL,UAAU,YAAnC,UACE,cAAC,IAAD,CAAQM,QA1EO,WACjB4D,QAAQC,IAAI,cAGZ,IAAI,IAAIT,EAAIZ,EAAMW,OAAS,EAAGC,GAAK,EAAGA,IAEpC,GAAGZ,EAAMY,GAAGxD,QAAQ,CAClB,IAAM0D,EAAQd,EAAMe,WAAU,SAAAC,GAAI,OAAIA,EAAK1D,KAAO0C,EAAMY,GAAGtD,OAC9C,IAAXwD,GAAyC,OAAzBlB,EAAQI,EAAMY,GAAGtD,MAGnC0C,EAAMmB,OAAOL,EAAO,GACpBb,EAAS,YAAID,KAIjBG,EAAc,IA0DiBjD,UAAU,WAAvC,gCACA,oBAAGI,GAAG,aAAN,4BAAmC4C,KACnC,cAAC,EAAD,CAAUlC,SA/CG,SAACM,GAEhB,GADA8C,QAAQC,IAA0B,MAAtB/C,EAAOR,aACA,MAAhBQ,EAAOf,OAAiBe,EAAOf,MAAMoD,QAAU,IAA6B,MAAtBrC,EAAOR,aAAuBQ,EAAOR,YAAY6C,QAAU,GAElH,GADAS,QAAQC,IAAI,oBACT/C,EAAOf,MAAM,KAAOe,EAAOf,MAAM,GAAG+D,cAAc,CAEnDF,QAAQC,IAAI,YACZ,IAAML,EAAO,CACXzD,MAAOe,EAAOf,MACdD,GAAI,EACJF,SAAS,EACTU,YAAaQ,EAAOR,aAElByD,EDTL,SAAiBzE,GACvB,IAAI+C,EACJ,IACCuB,QAAQC,IAAIvE,GACZ+C,EAAMU,KAAKC,MAAOtB,EAAK,wCAAyCL,EAAG0B,KAAKiB,UAAU,IAAIzC,EAAQjC,IAAQ,SAEvG,MAAMW,GACLqC,MAAM,sBAAwBrC,GAC9BoC,EAAM,KAEP,OAAOA,ECDW4B,CAAQT,GACP,OAATO,IACDP,EAAK1D,GAAKiE,EAAKjE,GACf2C,EAAS,GAAD,mBAAKD,GAAL,CAAYgB,WAKtBlB,MAAM,+CAIRA,MAAM,iFAuBN,cAAC,IAAD,IAlBoB,SAACE,GACvB,OACG,oBAAI9C,UAAU,YAAd,SACG8C,EAAM0B,KAAI,SAAAV,GAAI,OAAI,cAAC,EAAD,CAEhBlE,KAAMkE,EACNhE,SAAUA,EACVD,QAASA,GAHJiE,EAAK1D,SAedqE,CAAgB3B,OCnGhB4B,G,gBAA4BC,IAA5BD,QAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAGlBC,EAAM,WACV,OACE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAACG,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKE,KAAM,GAAIC,OAAQ,EAAGhF,UAAU,OAApC,SACE,cAAC,EAAD,UAIN,cAAC4E,EAAD,QAKNK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d27f2bcf.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Checkbox } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons/lib/icons';\nimport { useState } from 'react/cjs/react.development';\n\n\nexport const ToDoItem = (props) => {\n  const { item, onCheck, onRemove } = props;\n  const [className, setClassName] = useState(\"\");\n  const onRemoveItem = (e) => {\n    e.preventDefault();\n\n    if (onRemove) {\n      onRemove(item.id);\n    }\n  }\n\n  const onCheckItem = () => {\n    if (onCheck) {\n      onCheck(item.id);\n      if(className === \"\"){\n        setClassName(\"checked\");\n      }\n      else{\n        setClassName(\"\");\n      }\n    }\n  }\n\n  return (\n    <><li className=\"todo-item\" key={item.id}>\n      <Checkbox className={className}\n        checked={item.checked}\n        onChange={onCheckItem}\n      >{item.title}</Checkbox>\n      <Button onClick={onRemoveItem} style={{ background: \"#ff181d\"}}><DeleteOutlined/></Button>\n    </li><p class=\"desc\">{item.description}</p></>\n  )\n}","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nexport const ToDoForm = (props) => {\n  const { onSubmit } = props;\n  const [form] = Form.useForm();\n  const onFinish = (values) => {\n    if (onSubmit) {\n      onSubmit(values);\n    }\n    form.resetFields();\n  }\n\n\n  return (\n    <Form className=\"todo-form\" form={form} layout={'inline'} onFinish={onFinish}>\n      <Form.Item name=\"title\" className=\"todo-form-input\">\n        <Input placeholder={'New todo'} />\n      </Form.Item>\n      <Form.Item name=\"description\">\n        <Input placeholder={'Description'}/>\n      </Form.Item>\n      <Form.Item className=\"todo-form-actions\">\n        <Button htmlType=\"submit\" type=\"primary\">Add</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n","var t = \"1007c6b2a15afe074fe9cbc6862a0f4498b0b000\";\n\nclass item {\n\tid;\n\ttitle;\n\tchecked;\n\tdescription;\n\tconstructor (id, title, checked, description){\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.checked = checked;\n\t\tthis.description = description;\n\t}\n}\nclass adapter{\ncontent;\ndescription;\ncompleted\nconstructor(item){\n\tthis.content = item.title;\n\tthis.completed = item.checked;\n\tthis.description = item.description;\n}\n}\n\n function http(url, token, body, type){\n\t\n\tvar xmlHttp = new XMLHttpRequest();\n\txmlHttp.open(type, url, false);\n\txmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n\txmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\txmlHttp.send(body);\n\treturn xmlHttp.responseText;\n}\n\nexport function getTasks(){\ntry{\n\tvar temp = JSON.parse(http(\"https://api.todoist.com/rest/v1/tasks\", t, null, \"GET\"));\n\tvar arr = new Array(temp.length);\n\tfor(var i = 0; i < temp.length; i++){\n\t\tarr[i] = new item(temp[i].id, temp[i].content, temp[i].completed, temp[i].description);\n\t}\n}\ncatch(e){\n\talert(\"Error getting tasks: \" + e);\n\tarr = new Array(0);\n}\nreturn arr;\n}\n\nexport function delTask(id){\n\tvar res;\n\ttry{\n\thttp(\"https://api.todoist.com/rest/v1/tasks/\" + id, t, null, \"DELETE\");\n\tres = \"ok\";\n\t}\n\tcatch(e){\n\t\talert(\"Error deleting task: \" + e);\n\t\tres = \"err\";\n\t}\n\treturn res;\n}\n//delTask(5435755579);\n\nexport function addTask(item){\n\tvar res;\n\ttry{\n\t\tconsole.log(item);\n\t\tres = JSON.parse( http(\"https://api.todoist.com/rest/v1/tasks\", t, JSON.stringify(new adapter(item)), \"POST\"));\n\t}\n\tcatch(e){\n\t\talert(\"Error adding task: \" + e);\n\t\tres = null;\n\t}\n\treturn res;\n}\n\nexport function closeItem(id, action){\n\tvar res;\n\ttry{\n\t\tres = http(\"https://api.todoist.com/rest/v1/tasks/\" + id + \"/\" + action, t, null, \"POST\");\n\t}\n\tcatch(e){\n\t\talert(e);\n\t\tres = \"err\";\n\t}\n\treturn res;\t\n}\n\n\n\t","import React, { useEffect, useState } from 'react';\nimport { Card, Divider, Button } from 'antd';\nimport { ToDoItem } from './ToDoItem';\nimport { ToDoForm } from './ToDoForm';\nimport { getTasks, delTask, addTask, closeItem } from './http';\n\nexport const ToDo = () => {\n\n \n  const [todos, setTodos] = useState([]);\n  const [checkCount, setCheckCount] = useState(0);\n  \n  useEffect(() => {\n    var itemArray = getTasks(); \n    setTodos(itemArray); \n  }, []);\n\n  const onCheck = (id) => {\n    const index = todos.findIndex(todo => todo.id === id);\n    \n    if (index !== -1) {\n      const todo = todos[index];\n      if(closeItem(id, todo.checked ? \"reopen\" : \"close\") === \"\"){\n        todo.checked = !todo.checked;\n        todos.splice(index, 1, todo);\n        setTodos([...todos]);\n        setCheckCount(todo.checked? checkCount + 1 : checkCount - 1);\n      }\n    }\n  }\n\n  const remChecked = () => {\n    console.log(\"remchecked\");\n    \n    \n    for(var i = todos.length - 1; i >= 0; i--){\n      \n      if(todos[i].checked){\n        const index = todos.findIndex(todo => todo.id === todos[i].id);\n      if (index !== -1 && delTask(todos[i].id) === 'ok') {\n\n          \n        todos.splice(index, 1);\n        setTodos([...todos]);\n      }\n      }\n    }\n    setCheckCount(0);\n  }\n  \n  const onRemove = (id) => {\n    const index = todos.findIndex(todo => todo.id === id);\n\n    if (index !== -1 && delTask(id) === 'ok') {\n      if(todos[index].checked)setCheckCount(checkCount - 1);\n      todos.splice(index, 1);\n      setTodos([...todos]);\n    }\n    \n  }\n  const onSubmit = (values) => {\n    console.log(values.description == null);\n    if(values.title != null && values.title.length >= 3 &&  (values.description == null || values.description.length >= 3 )){\n      console.log(\"first check pass\");\n      if(values.title[0] === values.title[0].toUpperCase()){\n        \n        console.log(\"check ok\");\n        const todo = {\n          title: values.title,\n          id: 0,\n          checked: false,\n          description: values.description\n        };\n        var resp = addTask(todo);\n        if(resp !== null){\n          todo.id = resp.id;\n          setTodos([...todos, todo]);\n          \n        }\n      }\n      else {\n        alert(\"Title should start of a capital letter\");\n      }\n    }\n    else {\n      alert(\"Length of title and description (if there is one) should be no less than 3\");\n    }\n      \n  } \n\n  const renderTodoItems = (todos) => { //прикольно, чтобы добавить description, здесь не пришлось даже ничего редактировать\n    return (\n       <ul className=\"todo-list\">\n        { todos.map(todo => <ToDoItem \n            key={todo.id}\n            item={todo}\n            onRemove={onRemove} \n            onCheck={onCheck} \n          />) }\n      </ul>\n    )\n  }\n\n  return (\n    <Card title={'My todos'} className=\"todo-card\">\n      <Button onClick={remChecked} className='rmbutton'>Delete all checked</Button>\n      <p id=\"checkcount\">Checked items: {checkCount}</p>\n      <ToDoForm onSubmit={onSubmit} />\n      <Divider />\n      { renderTodoItems(todos) }\n    </Card>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Layout, Row, Col } from 'antd';\n\nimport { ToDo } from './components/ToDo';\n\n\nimport 'antd/dist/antd.css'\nimport './index.css';\n\nconst { Header, Footer, Content } = Layout;\n\n\nconst App = () => {\n  return (\n    <Layout>\n      <Header></Header>\n      <Content>\n        <Row>\n          <Col span={12} offset={6} className=\"todo\">\n            <ToDo />\n          </Col>\n        </Row>\n      </Content>\n      <Footer></Footer>\n    </Layout>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));  "],"sourceRoot":""}